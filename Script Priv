--// Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualInput = game:GetService("VirtualInputManager")
local HttpService = game:GetService("HttpService")

--// Whitelist System
local whitelist = {
    8172479471,
    2880637817,
    1522608840,
    7600805172,
}
local function checkWhitelist()
    local userId = LocalPlayer.UserId
    print("Your UserId:", userId)
    for _, id in ipairs(whitelist) do
        if tonumber(id) == userId then
            print("â\xe2\xe2\x9c\xe2\x9c\x85 You are whitelisted!")
            return true
        end
    end
    warn("â\xe2\xe2\x9d\xe2\x9d\x8c You are NOT whitelisted.")
    return false
end
if not checkWhitelist() then
    LocalPlayer:Kick("You are not whitelisted.")
    return
end

--// Load UI Library
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

--// GUI Setup
local window = DrRayLibrary:Load("Canes Priv Script", "Default")
local tab = DrRayLibrary.newTab("Rock Farm", "https://www.roblox.com/asset-thumbnail/image?assetId=1234567890&width=100&height=100&format=png")
tab.newLabel("Welcome to the Rock Farm script!")

--// Variables
local autoFarm = false
local punchDelay = 0.1
local selectRock = ""
local equippedTool = nil
local farmThread = nil

--// Equip Punch Tool
function equipPunchTool()
    if equippedTool and equippedTool.Parent == LocalPlayer.Character then return end
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
        if tool:IsA("Tool") and tool.Name:find("Punch") then
            tool.Parent = LocalPlayer.Character
            equippedTool = tool
            return
        end
    end
    warn("No punch tool found!")
end

--// Auto Punch Function
function autoPunchRock(rockName, requiredDurability)
    if farmThread then task.cancel(farmThread) end
    farmThread = task.spawn(function()
        equipPunchTool()
        while autoFarm and selectRock == rockName do
            task.wait(punchDelay)
            if LocalPlayer.Durability.Value >= requiredDurability then
                for _, machine in pairs(Workspace.machinesFolder:GetChildren()) do
                    if machine:IsA("Model") and machine.Name == rockName then
                        local rock = machine:FindFirstChild("Rock") or machine:FindFirstChildWhichIsA("BasePart")
                        if rock then
                            local character = LocalPlayer.Character
                            if character:FindFirstChild("LeftHand") and character:FindFirstChild("RightHand") then
                                for _, hand in ipairs({"RightHand", "LeftHand"}) do
                                    LocalPlayer.muscleEvent:FireServer("punch", hand)
                                    firetouchinterest(rock, character[hand], 0)
                                    firetouchinterest(rock, character[hand], 1)
                                end
                            end
                        end
                    end
                end
            end
        end
    end)
end

--// Rock Toggles
local rockData = {
    {"Auto Punch Jungle Rock (10M)", "Ancient Jungle Rock", 10000000},
    {"Auto Punch King Rock (5M)", "Muscle King Mountain", 5000000},
    {"Auto Punch Legend Rock (1M)", "Rock Of Legends", 1000000},
    {"Auto Punch Inferno Rock (750K)", "Inferno Rock", 750000},
    {"Auto Punch Mythical Rock (400K)", "Mythic Rock", 400000},
    {"Auto Punch Frost Rock (150K)", "Frozen Rock", 150000},
    {"Auto Punch Tiny Rock (0)", "Tiny Rock", 0}
}

for _, data in ipairs(rockData) do
    local label, rock, dur = unpack(data)
    tab.newToggle(label, label, false, function(state)
        autoFarm = state
        selectRock = state and rock or ""
        if autoFarm then
            autoPunchRock(rock, dur)
        end
    end)
end

--// Punch Delay Slider
tab.newSlider("Punch Delay", "Set the delay between punches", 0.1, 2, 0.1, function(value)
    punchDelay = value
end)

--// Rebirth Tab Setup
local rebirthTab = DrRayLibrary.newTab("Rebirth", "https://www.roblox.com/asset-thumbnail/image?assetId=1234567890&width=100&height=100&format=png")
rebirthTab.newLabel("Welcome to the Rebirth features tab!")

--// Pet Equip Functions
local function unequipAllPets()
    for _, folder in pairs(LocalPlayer.petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                ReplicatedStorage.rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.1)
end

function equipPetByName(name)
    unequipAllPets()
    task.wait(0.01)
    for _, pet in pairs(LocalPlayer.petsFolder.Unique:GetChildren()) do
        if pet.Name == name then
            ReplicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", pet)
        end
    end
end

--// Find & Press Helpers
function findMachine(name)
    for _, machine in pairs(Workspace.machinesFolder:GetChildren()) do
        if machine.Name == name then
            return machine
        end
    end
end

function pressE()
    VirtualInput:SendKeyEvent(true, Enum.KeyCode.E, false, game)
    task.wait()
    VirtualInput:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end

--// Toggle Variables
local autoRep = false
local autoRebirth = false
local fastRebirth = false
local statusLabel = rebirthTab.newLabel("Status: Idle")

--// Rebirth Tab Toggles
rebirthTab.newButton("Equip Swift Samurai", "Equip the Swift Samurai pet.", function()
    equipPetByName("Swift Samurai")
end)

rebirthTab.newToggle("Auto Rep", "Toggle Auto Rep", false, function(state)
    autoRep = state
end)

rebirthTab.newToggle("Auto Rebirth", "Toggle Auto Rebirth", false, function(state)
    autoRebirth = state
end)

rebirthTab.newToggle("Fast Rebirth", "Toggle Fast Rebirth", false, function(state)
    fastRebirth = state
end)

--// Hide All Frames Toggle
rebirthTab.newToggle("Hide All Frames", "Hide all UI frames in ReplicatedStorage", false, function(state)
    for _, obj in pairs(ReplicatedStorage:GetChildren()) do
        if obj:IsA("Instance") and obj.Name:match("Frame$") then
            obj.Visible = not state
        end
    end
end)

--// Loops
task.spawn(function()
    while true do
        if autoRep then
            for _ = 1, 4000 do
                LocalPlayer.muscleEvent:FireServer("rep")
            end
        end
        task.wait(0.01)
    end
end)

task.spawn(function()
    while true do
        if autoRebirth then
            local before = LocalPlayer.leaderstats.Rebirths.Value
            ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
            if LocalPlayer.leaderstats.Rebirths.Value > before then
                statusLabel.Text = "Status: Auto Rebirth Successful"
            else
                statusLabel.Text = "Status: Waiting to Rebirth"
            end
        end
        task.wait(1)
    end
end)

task.spawn(function()
    while true do
        if fastRebirth then
            local rebirths = LocalPlayer.leaderstats.Rebirths.Value
            local strengthNeeded = 10000 + 5000 * rebirths
            local golden = LocalPlayer.ultimatesFolder:FindFirstChild("Golden Rebirth")
            if golden then
                strengthNeeded = math.floor(strengthNeeded * (1 - golden.Value * 0.1))
            end

            unequipAllPets()
            task.wait(0.1)
            equipPetByName("Swift Samurai")

            while LocalPlayer.leaderstats.Strength.Value < strengthNeeded do
                for _ = 1, 20 do
                    LocalPlayer.muscleEvent:FireServer("rep")
                end
                task.wait()
            end

            unequipAllPets()
            task.wait(0.1)
            equipPetByName("Tribal Overlord")

            local machine = findMachine("Jungle Bar Lift")
            if machine and machine:FindFirstChild("interactSeat") then
                LocalPlayer.Character.HumanoidRootPart.CFrame = machine.interactSeat.CFrame * CFrame.new(0, 3, 0)
                repeat task.wait(0.1)
                    pressE()
                until LocalPlayer.Character.Humanoid.Sit
            end

            local before = LocalPlayer.leaderstats.Rebirths.Value
            repeat
                ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                task.wait(0.1)
            until LocalPlayer.leaderstats.Rebirths.Value > before

            statusLabel.Text = "Status: Fast Rebirth Complete"
        end
        task.wait(0.5)
    end
end)

