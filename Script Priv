-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local VirtualInput = game:GetService("VirtualInputManager")
local HttpService = game:GetService("HttpService")

-- Load DrRay Library
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

-- URL of the raw whitelist file hosted on Pastebin
local whitelistUrl = "https://pastebin.com/raw/zkUD0H8D"

local function checkWhitelist()
    local userId = LocalPlayer.UserId
    local success, response = pcall(function()
        -- Get the data from the whitelist URL
        return HttpService:GetAsync(whitelistUrl)
    end)
    
    if success then
        -- Decode the JSON response into a Lua table
        local whitelist = HttpService:JSONDecode(response)
        
        -- Check if the player's UserId is in the whitelist
        for _, id in ipairs(whitelist) do
            if id == userId then
                return true  -- Player is whitelisted
            end
        end
    else
        warn("Failed to fetch the whitelist.")
    end
    return false  -- Player is not whitelisted
end

-- Kick the player if not whitelisted
if not checkWhitelist() then
    LocalPlayer:Kick("You are not whitelisted.")  -- Kick non-whitelisted players
else
    print("You are whitelisted!")  -- Optional: confirm whitelisted status
end

-- Create the DrRay GUI window
local window = DrRayLibrary:Load("Canes Priv Script", "Default")

-- Create the first tab
local tab = DrRayLibrary.newTab("Main Controls", "https://www.roblox.com/asset-thumbnail/image?assetId=1234567890&width=100&height=100&format=png")

-- Add a label to the tab
tab.newLabel("Welcome to the Canes Priv script!")

-- Add Equip Swift Samurai button
tab.newButton("Equip Swift Samurai", "Equip the Swift Samurai pet.", function()
    equipPetByName("Swift Samurai")
end)

-- Add Auto Rep button with toggle functionality
local autoRep = false
tab.newToggle("Auto Rep", "Toggle Auto Rep", false, function(state)
    autoRep = state
end)

-- Add Auto Rebirth button with toggle functionality
local autoRebirth = false
tab.newToggle("Auto Rebirth", "Toggle Auto Rebirth", false, function(state)
    autoRebirth = state
end)

-- Add Fast Rebirth button with toggle functionality
local fastRebirth = false
tab.newToggle("Fast Rebirth", "Toggle Fast Rebirth", false, function(state)
    fastRebirth = state
end)

-- Add Status label to show current action status
local statusLabel = tab.newLabel("Status: Idle")

-- Helper Functions for actions (equip pets, etc.)
local function unequipAllPets()
    for _, folder in pairs(LocalPlayer.petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                ReplicatedStorage.rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.1)
end

local function equipPetByName(name)
    unequipAllPets()
    task.wait(0.01)
    for _, pet in pairs(LocalPlayer.petsFolder.Unique:GetChildren()) do
        if pet.Name == name then
            ReplicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", pet)
        end
    end
end

local function findMachine(machineName)
    local machine = workspace.machinesFolder:FindFirstChild(machineName)
    if not machine then
        for _, folder in pairs(workspace:GetChildren()) do
            if folder:IsA("Folder") and folder.Name:find("machines") then
                machine = folder:FindFirstChild(machineName)
                if machine then break end
            end
        end
    end
    return machine
end

local function pressE()
    VirtualInput:SendKeyEvent(true, "E", false, game)
    task.wait(0.1)
    VirtualInput:SendKeyEvent(false, "E", false, game)
end

-- Auto Rep loop
task.spawn(function()
    while true do
        if autoRep then
            for _ = 1, 10 do
                LocalPlayer.muscleEvent:FireServer("rep")
            end
        end
        task.wait(0.01)
    end
end)

-- Auto Rebirth loop
task.spawn(function()
    while true do
        if autoRebirth then
            local before = LocalPlayer.leaderstats.Rebirths.Value
            ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
            if LocalPlayer.leaderstats.Rebirths.Value > before then
                statusLabel.Text = "Status: Auto Rebirth Successful"
            else
                statusLabel.Text = "Status: Waiting to Rebirth"
            end
        end
        task.wait(1)
    end
end)

-- Fast Rebirth loop
task.spawn(function()
    while true do
        if fastRebirth then
            local rebirths = LocalPlayer.leaderstats.Rebirths.Value
            local strengthNeeded = 10000 + 5000 * rebirths
            local golden = LocalPlayer.ultimatesFolder:FindFirstChild("Golden Rebirth")
            if golden then
                strengthNeeded = math.floor(strengthNeeded * (1 - golden.Value * 0.1))
            end

            unequipAllPets()
            task.wait(0.1)
            equipPetByName("Swift Samurai")

            while LocalPlayer.leaderstats.Strength.Value < strengthNeeded do
                for _ = 1, 20 do
                    LocalPlayer.muscleEvent:FireServer("rep")
                end
                task.wait()
            end

            unequipAllPets()
            task.wait(0.1)
            equipPetByName("Tribal Overlord")

            local machine = findMachine("Jungle Bar Lift")
            if machine and machine:FindFirstChild("interactSeat") then
                LocalPlayer.Character.HumanoidRootPart.CFrame = machine.interactSeat.CFrame * CFrame.new(0, 3, 0)
                repeat
                    task.wait(0.1)
                    pressE()
                until LocalPlayer.Character.Humanoid.Sit
            end

            local before = LocalPlayer.leaderstats.Rebirths.Value
            repeat
                ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                task.wait(0.1)
            until LocalPlayer.leaderstats.Rebirths.Value > before

            statusLabel.Text = "Status: Fast Rebirth Complete"
        end
        task.wait(0.5)
    end
end)
