-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local VirtualInput = game:GetService("VirtualInputManager")

-- Load DrRay Library
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

-- Whitelist System
local whitelist = {
    8172479471,
    2880637817,
}

local function checkWhitelist()
    local userId = LocalPlayer.UserId
    print("Your UserId:", userId)
    for _, id in ipairs(whitelist) do
        if tonumber(id) == userId then
            print("✅ You are whitelisted!")
            return true
        end
    end
    warn("❌ You are NOT whitelisted.")
    return false
end

if not checkWhitelist() then
    LocalPlayer:Kick("You are not whitelisted.")
    return
end

-- GUI Setup
local window = DrRayLibrary:Load("Canes Priv Script", "Default")
local mainTab = DrRayLibrary.newTab("Main Controls", "")
mainTab.newLabel("Welcome to the Canes Priv script!")

local lockTab = DrRayLibrary.newTab("Lock Position", "")
lockTab.newLabel("Control your position locking here!")

-- Toggles
local autoRep = false
local autoRebirth = false
local fastRebirth = false
local lockPosition = false

mainTab.newButton("Equip Swift Samurai", "Equip the Swift Samurai pet.", function()
    equipPetByName("Swift Samurai")
end)

mainTab.newToggle("Auto Rep", "Toggle Auto Rep", false, function(state)
    autoRep = state
end)

mainTab.newToggle("Auto Rebirth", "Toggle Auto Rebirth", false, function(state)
    autoRebirth = state
end)

mainTab.newToggle("Fast Rebirth", "Toggle Fast Rebirth", false, function(state)
    fastRebirth = state
end)

local statusLabel = mainTab.newLabel("Status: Idle")

lockTab.newToggle("Lock Position", "Toggle Lock Position", false, function(state)
    lockPosition = state
end)

-- Helpers
local function unequipAllPets()
    for _, folder in pairs(LocalPlayer.petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                ReplicatedStorage.rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.1)
end

function equipPetByName(name)
    unequipAllPets()
    task.wait(0.01)
    for _, pet in pairs(LocalPlayer.petsFolder.Unique:GetChildren()) do
        if pet.Name == name then
            ReplicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", pet)
        end
    end
end

function findMachine(machineName)
    local machine = workspace.machinesFolder:FindFirstChild(machineName)
    if not machine then
        for _, folder in pairs(workspace:GetChildren()) do
            if folder:IsA("Folder") and folder.Name:find("machines") then
                machine = folder:FindFirstChild(machineName)
                if machine then break end
            end
        end
    end
    return machine
end

function pressE()
    VirtualInput:SendKeyEvent(true, "E", false, game)
    task.wait(0.1)
    VirtualInput:SendKeyEvent(false, "E", false, game)
end

function lockPlayerPosition()
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.Humanoid.WalkSpeed = 0
        char.Humanoid.JumpPower = 0
        local pos = char.HumanoidRootPart.Position
        char.HumanoidRootPart.CFrame = CFrame.new(pos)
    end
end

-- Loops
task.spawn(function()
    while true do
        if autoRep then
            for _ = 1, 10 do
                LocalPlayer.muscleEvent:FireServer("rep")
            end
        end
        task.wait(0.01)
    end
end)

task.spawn(function()
    while true do
        if autoRebirth then
            local before = LocalPlayer.leaderstats.Rebirths.Value
            ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
            if LocalPlayer.leaderstats.Rebirths.Value > before then
                statusLabel.Text = "Status: Auto Rebirth Successful"
            else
                statusLabel.Text = "Status: Waiting to Rebirth"
            end
        end
        task.wait(1)
    end
end)

task.spawn(function()
    while true do
        if fastRebirth then
            local rebirths = LocalPlayer.leaderstats.Rebirths.Value
            local strengthNeeded = 10000 + 5000 * rebirths
            local golden = LocalPlayer.ultimatesFolder:FindFirstChild("Golden Rebirth")
            if golden then
                strengthNeeded = math.floor(strengthNeeded * (1 - golden.Value * 0.1))
            end

            unequipAllPets()
            task.wait(0.1)
            equipPetByName("Swift Samurai")

            while LocalPlayer.leaderstats.Strength.Value < strengthNeeded do
                for _ = 1, 20 do
                    LocalPlayer.muscleEvent:FireServer("rep")
                end
                task.wait()
            end

            unequipAllPets()
            task.wait(0.1)
            equipPetByName("Tribal Overlord")

            local machine = findMachine("Jungle Bar Lift")
            if machine and machine:FindFirstChild("interactSeat") then
                LocalPlayer.Character.HumanoidRootPart.CFrame = machine.interactSeat.CFrame * CFrame.new(0, 3, 0)
                repeat
                    task.wait(0.1)
                    pressE()
                until LocalPlayer.Character.Humanoid.Sit
            end

            local before = LocalPlayer.leaderstats.Rebirths.Value
            repeat
                ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                task.wait(0.1)
            until LocalPlayer.leaderstats.Rebirths.Value > before

            statusLabel.Text = "Status: Fast Rebirth Complete"
        end
        task.wait(0.5)
    end
end)

task.spawn(function()
    while true do
        if lockPosition then
            lockPlayerPosition()
        else
            local char = LocalPlayer.Character
            if char and char:FindFirstChild("Humanoid") then
                char.Humanoid.WalkSpeed = 16
                char.Humanoid.JumpPower = 50
            end
        end
        task.wait(0.1)
    end
end)
